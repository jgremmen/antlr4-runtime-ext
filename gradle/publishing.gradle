/*
 * Copyright 2021 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


tasks.withType(Jar).configureEach {
  reproducibleFileOrder true

  manifest {
    attributes(
        'Implementation-Vendor': 'Jeroen Gremmen',
        'Implementation-Vendor-Id': 'de.sayayi',
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.specification.vendor')})",
        'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss')
    )
  }

  from files('LICENSE')
}


tasks.register('javadocJar', Jar) {
  dependsOn javadoc
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}


tasks.register('sourcesJar', Jar) {
  dependsOn classes
  archiveClassifier.set('sources')
  from sourceSets.main.allSource
}


artifacts {
  archives javadocJar
  archives sourcesJar
}


publishing {
  publications {
    maven(MavenPublication) {
      suppressPomMetadataWarningsFor 'optionalApiElements'
      suppressPomMetadataWarningsFor 'optionalRuntimeElements'

      from components.java

      artifact javadocJar
      artifact sourcesJar

      pom {
        name = 'ANTLR4 Runtime Extensions'
        description = "ANTLR4 Runtime Extensions"
        url = 'https://github.com/jgremmen/antlr4-runtime-ext'
        inceptionYear = '2022'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }

        scm {
          connection = 'scm:git:git://github.com/jgremmen/antlr4-runtime-ext.git'
          developerConnection = 'scm:git:git://github.com/jgremmen/antlr4-runtime-ext.git'
          url = 'https://github.com/jgremmen/antlr4-runtime-ext'
        }
      }
    }
  }

  def snapshot = version.toString().endsWith('-SNAPSHOT')
  def mavenTempUrl = rootProject.layout
      .buildDirectory.dir('repository').get().dir(snapshot ? 'snapshot' : 'release').asFile

  repositories {
    maven {
      name = 'mavenTemp'
      url = mavenTempUrl
    }
    maven {
      // maven central
      url = snapshot
          ? 'https://oss.sonatype.org/content/repositories/snapshots'
          : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
      credentials {
        username = project.findProperty('mavenCentral.username')
        password = project.findProperty('mavenCentral.password')
      }
    }
  }
}


signing {
  sign publishing.publications.maven
}
